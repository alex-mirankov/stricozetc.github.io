{"version":3,"sources":["store/actions/login/login.types.js","store/actions/login/login.actions.js","store/actions/todo/todo.types.js","store/actions/todo/todo.actions.js","store/reducers/login/login.reducer.js","store/reducers/todo/todo.reducer.js","store/reducers/todo/count.reducer.js","store/reducers/side/side.reducer.js","store/actions/side/side.types.js","store/reducers/todo/index.js","store/reducers/chat/chat.reducer.js","store/actions/chat/chat.types.js","store/reducers/index.js","store/index.js","store/actions/chat/chat.action.js","components/share/header-button/headerButton.js","components/home-header/homeHeaderComponent.js","store/actions/side/side.actions.js","components/share/control-button/buttonControl.js","components/todo-item-component/todoItemComponent.js","components/todo-input-component/todoInputComponents.js","containers/home-todo-list-container/homeToDoListContainer.js","components/home-side/home-side-component.js","components/chat-message/chatMessage.js","containers/chat-container/chat.js","constants/config.js","containers/home-page-container/homePageContainer.js","components/login-header-component/loginHeaderComponent.js","components/login-control-component/loginControlComponent.js","components/login-password-component/loginPasswordComponent.js","components/login-user-component/loginUserComponent.js","containers/login-container/loginContainer.js","containers/main-container/Main.js","App.js","serviceWorker.js","history.js","index.js"],"names":["LOG_IN","LOG_OUT","logIn","payload","type","logOut","nextToDoId","toggleTodo","id","initialState","state","user","logout","todos","arguments","length","undefined","action","concat","Object","toConsumableArray","text","completed","map","todo","objectSpread","filter","count","counter","toggle","showTodo","showChat","side","combineReducers","countMessages","messagesAdmin","author","chat","AppReducers","rootReducer","Store","createStore","composeWithDevTools","counterMessages","HeaderButton","border","this","props","react_default","a","createElement","className","style","onClick","content","React","Component","HomeHeaderComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hideSide","bind","assertThisInitialized","localStorage","setItem","logOutRedux","hideSideItem","_this$props","headerButton","getItem","connect","dispatch","ButtonControl","color","backgroundColor","ToDOItemComponent","display","edit","delete","update","val","updateItem","setState","deleteItem","input","_this2","Fragment","ref","node","buttonControl","value","deleteTodo","updateTodo","ToDoInputComponent","onSubmit","e","preventDefault","trim","placeholder","maxLength","HomeToDoListContainer","onTodoClick","todoInputComponents","todoItemComponent","assign","key","HomeSideComponent","showToDoList","visible","ChatMessageComponent","justifyContent","styles","name","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ChatContainer","messages","sendMessage","deleteAllMessages","database","on","snapshot","array","push","getArrayMessagesAdmin","values","mes","set","keyAdmin","adminRef","i","arrayMessAdmin","String","child","remove","deleteFromRedux","_this3","chatMessage","getAllMessagesAdmin","HomePageContainer","login","visibleChat","visibleTodo","homeHeaderComponent","home_side_component","chat_container_chat","homeToDoListContainer","HomePage","unSetUser","LoginHeaderComponent","LoginControlComponent","signIn","reset","LoginPasswordComponent","LoginUserComponent","onChange","handlerUserNameInput","LoginContainer","_React$Component","handleSubmit","inherits","createClass","userName","target","setUser","loginHeaderComponent","loginUserComponent","loginPasswordComponent","loginControlComponent","Login","MainContainer","Main","App","es","store","Boolean","window","location","hostname","match","createBrowserHistory","ReactDOM","render","Router","history","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.573057c4.chunk.js","sourcesContent":["export const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n","import { LOG_IN, LOG_OUT } from './login.types';\r\n\r\nexport function logIn(payload) {\r\n    return {\r\n        type: LOG_IN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function logOut() {\r\n    return {\r\n        type: LOG_OUT\r\n    }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, UPDATE_TODO } from './todo.types';\r\n\r\nlet nextToDoId = 0;\r\n\r\nexport const addTodo = (text) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        id: nextToDoId++,\r\n        text,\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const updateTodo = (id, text) => {\r\n    return {\r\n        type: UPDATE_TODO,\r\n        id,\r\n        text: text\r\n    }\r\n}\r\n\r\nexport const toggleTodo = (id) => {\r\n    return {\r\n        type: TOGGLE_TODO,\r\n        id\r\n    }\r\n}\r\n","import { LOG_IN, LOG_OUT } from '../../actions';\r\n\r\nconst initialState = {\r\n    state: 'INITIAL',\r\n    user: '',\r\n    logout: false,\r\n};\r\n\r\nexport function loginReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOG_IN:\r\n            return {\r\n                state,\r\n                user: action.payload,\r\n            };\r\n        case LOG_OUT:\r\n            return {\r\n                state,\r\n                user: '',\r\n                logout: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, UPDATE_TODO } from '../../actions/todo/todo.types';\r\n\r\nconst todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false,\r\n                }\r\n            ]\r\n        case TOGGLE_TODO:\r\n            return state.map(todo =>\r\n                (todo.id === action.id)\r\n                    ? { ...todo, completed: !todo.completed }\r\n                    : todo\r\n            )\r\n        case DELETE_TODO:\r\n            return state.filter(todo => todo.id !== action.id)\r\n        case UPDATE_TODO:\r\n            return state.map((todo) =>\r\n                (todo.id === action.id)\r\n                    ? { text: action.text }\r\n                    : todo\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todos;\r\n","import { ADD_TODO, DELETE_TODO } from '../../actions/todo/todo.types';\r\n\r\nconst initialState = {\r\n    count: 0\r\n};\r\n\r\nconst counter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return {\r\n                count: state.count + 1\r\n            }\r\n        case DELETE_TODO:\r\n            return {\r\n                count: state.count - 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default counter;","import { TOGGLE_SIDE, SHOW_CHAT, SHOW_TODO } from '../../actions/side/side.types';\r\n\r\nconst initialState = {\r\n    toggle: false,\r\n    showTodo: true,\r\n    showChat: false,\r\n}\r\n\r\nconst side = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_SIDE:\r\n            return {\r\n                showChat: state.showChat,\r\n                showTodo: state.showTodo,\r\n                toggle: !state.toggle,\r\n            }\r\n        case SHOW_CHAT:\r\n            return {\r\n                showChat: true,\r\n                showTodo: false,\r\n                toggle: false,\r\n            }\r\n        case SHOW_TODO:\r\n            return {\r\n                showChat: false,\r\n                showTodo: true,\r\n                toggle: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default side;\r\n","export const TOGGLE_SIDE = 'TOGGLE_SIDE';\r\nexport const SHOW_TODO = 'SHOW_TODO';\r\nexport const SHOW_CHAT = 'SHOW_CHAT';\r\n","import { combineReducers } from 'redux';\r\nimport todos from './todo.reducer';\r\nimport counter from './count.reducer';\r\nimport side from '../side/side.reducer';\r\n\r\nexport default combineReducers({\r\n    todos,\r\n    counter,\r\n    side\r\n});\r\n","import { GET_ALL_MESSAGES_ADMIN, DELETE_ALL, MESSAGE_COUNTER } from '../../actions/chat/chat.types';\r\n\r\nconst initialState = {\r\n    countMessages: 1,\r\n    messagesAdmin: [],\r\n    author: '',\r\n    count: 0,\r\n};\r\n\r\nconst chat = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_MESSAGES_ADMIN:\r\n            return {\r\n                messagesAdmin: action.payload,\r\n                countMessages: action.length,\r\n                author: action.user,\r\n                count: state.count,\r\n            }\r\n        case MESSAGE_COUNTER:\r\n            return {\r\n                messagesAdmin: state.messagesAdmin,\r\n                countMessages: state.countMessages,\r\n                author: state.author,\r\n                count: action.payload,\r\n            }\r\n        case DELETE_ALL:\r\n            return {\r\n                messagesAdmin: [],\r\n                countMessages: 1,\r\n                author: '',\r\n                count: 0,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default chat;","export const GET_ALL_MESSAGES_ADMIN = 'GET_ALL_MESSAGES_ADMIN';\r\nexport const MESSAGE_COUNTER = 'MESSAGE_COUNTER';\r\nexport const DELETE_ALL = 'DELETE_ALL';\r\n","import { combineReducers } from 'redux';\r\nimport { loginReducer } from './login/login.reducer';\r\nimport rootReducer from './todo/index';\r\nimport chat from './chat/chat.reducer';\r\n\r\nexport const AppReducers = combineReducers({\r\n    user: loginReducer,\r\n    rootReducer,\r\n    chat,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { AppReducers } from './reducers/index';\r\n\r\nexport const Store = createStore(\r\n    AppReducers,\r\n    composeWithDevTools()\r\n);\r\n","import { GET_ALL_MESSAGES_ADMIN, DELETE_ALL, MESSAGE_COUNTER } from './chat.types';\r\n\r\nexport const getAllMessagesAdmin = (payload, length, user) => {\r\n    return {\r\n        type: GET_ALL_MESSAGES_ADMIN,\r\n        payload,\r\n        length,\r\n        user,\r\n    }\r\n}\r\n\r\nexport const counterMessages = (payload) => {\r\n    return {\r\n        type: MESSAGE_COUNTER,\r\n        payload,\r\n    }\r\n}\r\n\r\nexport const deleteAll = () => {\r\n    return {\r\n        type: DELETE_ALL\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass HeaderButton extends React.Component {\r\n\r\n    render() {\r\n        let { border } = this.props;\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"button-header\"\r\n                    style={{border: border}}\r\n                    onClick={this.props.action}\r\n                >\r\n                    {this.props.content}\r\n                    {this.props.counter}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderButton;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport { toggleSide } from '../../store/actions/side/side.actions';\r\nimport { logOut } from '../../store/actions/login/login.actions';\r\n\r\nimport HeaderButton from '../share/header-button/headerButton';\r\n\r\nclass HomeHeaderComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hideSide = this.hideSide.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.setItem('login', '');\r\n        this.props.logOutRedux();\r\n    }\r\n\r\n    hideSide() {\r\n        this.props.hideSideItem();\r\n    }\r\n\r\n    render() {\r\n        let { counter, counterMessages } = this.props;\r\n        return (\r\n            <div className=\"home-header\">\r\n                <div className=\"menu-home\">\r\n                    <HeaderButton\r\n                        content={<i className=\"fas header-icons fa-bars\"></i>}\r\n                        border=\"none\"\r\n                        action={this.hideSide}\r\n                    />\r\n                    <p className=\"app-name\">React App</p>\r\n                </div>\r\n                <div className=\"info-home\">\r\n                    <div className=\"control-home\">\r\n                        <HeaderButton\r\n                            content={<i className=\"fas header-icons fa-list-ul\"></i>}\r\n                            counter={<span className=\"counter\">{counter.count}</span>}\r\n                        />\r\n                        <HeaderButton\r\n                            content={<i className=\"far header-icons fa-envelope\"></i>}\r\n                            counter={<span className=\"counter counter-messages\">{counterMessages}</span>}\r\n                        />\r\n                    </div>\r\n                    <p className=\"user-name\">\r\n                        {localStorage.getItem('login')}\r\n                        <button\r\n                            className=\"button-logout\"\r\n                            onClick={this.logOut}\r\n                        >\r\n                            Log Out\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nHomeHeaderComponent.propTypes = {\r\n    counterMessages: PropTypes.number.isRequired,\r\n    counter: PropTypes.number.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    hideSideItem: () => {\r\n        dispatch(toggleSide());\r\n    },\r\n    logOutRedux: () => {\r\n        dispatch(logOut());\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.user,\r\n        counter: state.rootReducer.counter,\r\n        counterMessages: state.chat.count,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeaderComponent);\r\n\r\n","import { TOGGLE_SIDE, SHOW_CHAT, SHOW_TODO } from './side.types';\r\n\r\nexport const toggleSide = () => {\r\n    return {\r\n        type: TOGGLE_SIDE\r\n    }\r\n}\r\n\r\nexport const showChat = () => {\r\n    return {\r\n        type: SHOW_CHAT\r\n    }\r\n}\r\n\r\nexport const showTodo = () => {\r\n    return {\r\n        type: SHOW_TODO\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass ButtonControl extends React.Component {\r\n    \r\n    render() {\r\n        let { color } = this.props;\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"button-control button-approve\"\r\n                    style={{backgroundColor: color}}\r\n                    onClick={this.props.action}\r\n                >\r\n                    {this.props.content}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonControl;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, updateTodo, toggleTodo } from '../../store/actions/todo/todo.actions';\r\nimport ButtonControl from '../share/control-button/buttonControl';\r\n\r\nclass ToDOItemComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            display: false\r\n        }\r\n\r\n        this.edit = this.edit.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    update(val) {\r\n        this.props.updateItem(this.props.id, val);\r\n    }\r\n\r\n    edit() {\r\n        this.setState({\r\n            display: !this.state.display,\r\n        })\r\n    }\r\n\r\n    toggle() {\r\n        this.props.toggle(this.props.id);\r\n    }\r\n\r\n    delete() {\r\n        this.props.deleteItem(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        let { text } = this.props;\r\n        let input;\r\n        return (\r\n            <li className=\"container-item\">\r\n                <p className=\"done-item\">\r\n                    {\r\n                        this.props.completed ?\r\n                            <i className=\"fas like-icon fa-thumbs-up\"></i>\r\n                            : <React.Fragment></React.Fragment>\r\n                    }\r\n                </p>\r\n                <p\r\n                    className=\"item-text\"\r\n                >\r\n                    {text}\r\n                </p>\r\n                {\r\n                    this.state.display ?\r\n                        <div className=\"content-update-item\">\r\n                            <input className=\"input-new-value\" ref={node => (input = node)} />\r\n                            <ButtonControl\r\n                                color='green'\r\n                                content={<i className=\"fas fa-share-square\"></i>}\r\n                                action={() => this.update(input.value)}\r\n                            />\r\n                        </div>\r\n                        : <React.Fragment></React.Fragment>\r\n                }\r\n                <ButtonControl\r\n                    content={<i className=\"fas fa-check\"></i>}\r\n                    color='#71b346'\r\n                    action={this.toggle}\r\n                />\r\n                <ButtonControl\r\n                    content={<i className=\"fas fa-pencil-alt\"></i>}\r\n                    color='#63b8a9'\r\n                    action={this.edit}\r\n                />\r\n                <ButtonControl\r\n                    content={<i className=\"fas fa-trash-alt\"></i>}\r\n                    color='#f16b5e'\r\n                    action={this.delete}\r\n                />\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteItem: (id) => {\r\n        dispatch(deleteTodo(id));\r\n    },\r\n    toggle: (id) => {\r\n        dispatch(toggleTodo(id));\r\n    },\r\n    updateItem: (id, text) => {\r\n        dispatch(updateTodo(id, text));\r\n    }\r\n});\r\n\r\nToDOItemComponent.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ToDOItemComponent);\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../../store/actions';\r\n\r\nclass ToDoInputComponent extends React.Component {\r\n\r\n    render() {\r\n        let input;\r\n        let { dispatch } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"todo-input-container\">\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        if (!input.value.trim()) {\r\n                            return\r\n                        }\r\n                        dispatch(addTodo(input.value))\r\n                        input.value = ''\r\n                    }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"todo-input\"\r\n                            placeholder=\"add todo\"\r\n                            ref={node =>\r\n                                (input = node)\r\n                            }\r\n                            maxLength=\"20\"\r\n                        />\r\n                        <button\r\n                            className=\"add-task-button\"\r\n                            type='submit'\r\n                        >\r\n                            Add New Tasks\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect()(ToDoInputComponent)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\n\r\nimport ToDOItemComponent from '../../components/todo-item-component/todoItemComponent';\r\nimport ToDoInputComponent from '../../components/todo-input-component/todoInputComponents';\r\nimport { toggleTodo } from '../../store/actions';\r\n\r\nclass HomeToDoListContainer extends React.Component {\r\n    render() {\r\n        let { todos, onTodoClick } = this.props;\r\n        return (\r\n            <div className=\"todo-list-container\">\r\n                <div className=\"container-todo-item\">\r\n                    <ToDoInputComponent />\r\n                    <ul>\r\n                        {\r\n                            todos.map(todo =>\r\n                                <ToDOItemComponent\r\n                                    key={todo.id}\r\n                                    {...todo}\r\n                                    onClick={() => onTodoClick(todo.id)}\r\n                                />\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHomeToDoListContainer.propTypes = {\r\n    todos: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            completed: PropTypes.bool.isRequired,\r\n            text: PropTypes.string.isRequired\r\n        }).isRequired\r\n    ).isRequired,\r\n    onTodoClick: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispacthToProps = (dispatch) => ({\r\n    onTodoClick: (id) => {\r\n        dispatch(toggleTodo(id));\r\n    },\r\n})\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        todos: state.rootReducer.todos,\r\n    }), mapDispacthToProps\r\n)(HomeToDoListContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\n\r\nimport { showChat, showTodo } from '../../store/actions/side/side.actions';\r\n\r\nclass HomeSideComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.showToDoList = this.showToDoList.bind(this);\r\n        this.showChat = this.showChat.bind(this);\r\n    }\r\n\r\n    showToDoList() {\r\n        this.props.showTodo();\r\n    }\r\n\r\n    showChat() {\r\n        this.props.showChat();\r\n    }\r\n\r\n    render() {\r\n        let { visible } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    visible ?\r\n                        <div className=\"chat-component\">\r\n                            <p className=\"chat-content\">\r\n                            <button\r\n                                className=\"chat-item\"\r\n                                onClick={this.showToDoList}\r\n                            >\r\n                                Todo List\r\n                            </button>\r\n                            </p>\r\n                            <p className=\"chat-content\">\r\n                            <button\r\n                                className=\"chat-item\"\r\n                                onClick={this.showChat}\r\n                            >\r\n                                Chat\r\n                            </button>\r\n                            </p>\r\n                        </div>\r\n                        : <React.Fragment></React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nHomeSideComponent.propTypes = {\r\n    visible: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        visible: state.rootReducer.side.toggle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    showTodo: () => {\r\n        dispatch(showTodo());\r\n    },\r\n    showChat: () => {\r\n        dispatch(showChat());\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSideComponent);\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass ChatMessageComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"message-block\" style={{display: this.props.display, justifyContent: this.props.styles}}>\r\n                <span className=\"message-container\">\r\n                    <span className=\"nickName-content\">\r\n                        {this.props.name}\r\n                    </span>\r\n                    <span className=\"message-content\">\r\n                        {this.props.message}\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatMessageComponent;","import React from 'react';\r\nimport './style.css';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ChatMessageComponent from '../../components/chat-message/chatMessage';\r\n\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { config } from '../../constants/config';\r\nimport { getAllMessagesAdmin, deleteAll, counterMessages } from '../../store/actions/chat/chat.action';\r\nfirebase.initializeApp(config);\r\n\r\nclass ChatContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            messages: [],\r\n        }\r\n\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.deleteAllMessages = this.deleteAllMessages.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var connectToDataBaseAdmin = firebase.database().ref('listOfMessages/admin');\r\n        connectToDataBaseAdmin.on('value', snapshot => {\r\n            let array = [];\r\n            for (let key in snapshot.val()) {\r\n                if (snapshot.val()[key].author !== this.props.user) {\r\n                    array.push(snapshot.val());\r\n                }\r\n            }\r\n            this.props.countMessages(array.length - 1);\r\n            this.props.getArrayMessagesAdmin(Object.values(snapshot.val()), Object.values(snapshot.val()).length, this.props.user);\r\n        });\r\n    }\r\n\r\n    sendMessage(mes) {\r\n        let nullId = \"0\";\r\n        if (this.props.id === 0) {\r\n            firebase.database().ref('listOfMessages/admin/' + nullId).set({\r\n                author: '',\r\n                message: '',\r\n            });\r\n        }\r\n        else {\r\n            firebase.database().ref('listOfMessages/admin/' + this.props.id).set({\r\n                author: this.props.user,\r\n                message: mes,\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteAllMessages() {\r\n        let keyAdmin;\r\n        var adminRef = firebase.database().ref('listOfMessages/admin');\r\n        for (let i = 1; i < this.props.arrayMessAdmin.length; i++) {\r\n            keyAdmin = String(i);\r\n            adminRef.child(keyAdmin).remove();\r\n        }\r\n        this.props.deleteFromRedux();\r\n    }\r\n\r\n    render() {\r\n        let input;\r\n        let { user, arrayMessAdmin } = this.props;\r\n        return (\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-main\">\r\n                    <div className=\"chat-header-container\">\r\n                        <h2 className=\"chat-header\">Chat</h2>\r\n                    </div>\r\n                    <div className=\"chat-messages\">\r\n                        {\r\n                            arrayMessAdmin.map(i =>\r\n                                i.author === '' ?\r\n                                    <ChatMessageComponent\r\n                                        styles={'flex-end'}\r\n                                        display={'none'}\r\n                                        name={i.author}\r\n                                        message={i.message}\r\n                                    />\r\n                                    : i.author === user ?\r\n                                        <ChatMessageComponent\r\n                                            styles={'flex-end'}\r\n                                            display={'flex'}\r\n                                            name={i.author}\r\n                                            message={i.message}\r\n                                        />\r\n                                        : <ChatMessageComponent\r\n                                            name={i.author}\r\n                                            display={'flex'}\r\n                                            message={i.message}\r\n                                        />\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"chat-sending\">\r\n                        <button\r\n                            className=\"chat-delete-all chat-buttons\"\r\n                            onClick={this.deleteAllMessages}\r\n                        >\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                        </button>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Write a message...\"\r\n                            className=\"chat-input\"\r\n                            ref={node => {\r\n                                (input = node)\r\n                            }}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"chat-send chat-buttons\"\r\n                            onClick={() => {\r\n                                this.sendMessage(input.value);\r\n                                input.value = ''\r\n                            }}>\r\n                            <i className=\"fas fa-paper-plane\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatContainer.propTypes = {\r\n    user: PropTypes.string.isRequired,\r\n    arrayMessAdmin: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            author: PropTypes.string.isRequired,\r\n            message: PropTypes.string.isRequired,\r\n        }).isRequired\r\n    ).isRequired,\r\n    id: PropTypes.number.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getArrayMessagesAdmin: (value, length, user) => {\r\n        dispatch(getAllMessagesAdmin(value, length, user))\r\n    },\r\n    deleteFromRedux: () => {\r\n        dispatch(deleteAll())\r\n    },\r\n    countMessages: (val) => {\r\n        dispatch(counterMessages(val));\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user.user,\r\n    id: state.chat.countMessages,\r\n    count: state.chat.count,\r\n    arrayMessAdmin: state.chat.messagesAdmin,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatContainer);","export const config = {\r\n    apiKey: \"AIzaSyDdz4qotaGYLqgoaQx3BQCRNOFreZdRxTE\",\r\n    authDomain: \"todo-4d59a.firebaseapp.com\",\r\n    databaseURL: \"https://todo-4d59a.firebaseio.com\",\r\n    projectId: \"todo-4d59a\",\r\n    storageBucket: \"todo-4d59a.appspot.com\",\r\n    messagingSenderId: \"497088164832\"\r\n}","import React from 'react';\r\nimport './style.css'\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { logOut, logIn } from '../../store/actions/login/login.actions';\r\nimport { counterMessages } from '../../store/actions/chat/chat.action';\r\n\r\nimport HomeHeaderComponent from '../../components/home-header/homeHeaderComponent';\r\nimport HomeToDoListContainer from '../home-todo-list-container/homeToDoListContainer';\r\nimport HomeSideComponent from '../../components/home-side/home-side-component';\r\nimport ChatContainer from '../chat-container/chat';\r\n\r\nclass HomePageContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.login(localStorage.getItem('login'));\r\n        var connectToDataBaseAdmin = firebase.database().ref('listOfMessages/admin');\r\n        connectToDataBaseAdmin.on('value', snapshot => {\r\n            let array = [];\r\n            for (let key in snapshot.val()) {\r\n                if (snapshot.val()[key].author !== this.props.user) {\r\n                    array.push(snapshot.val());\r\n                }\r\n            }\r\n            this.props.countMessages(array.length - 1);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { visibleChat, visibleTodo } = this.props;\r\n        return (\r\n            <div className=\"page-home\">\r\n                <HomeHeaderComponent />\r\n                <div className=\"todo-main\">\r\n                    <HomeSideComponent />\r\n                    {\r\n                        visibleChat ?\r\n                            <ChatContainer />\r\n                            : visibleTodo ? <HomeToDoListContainer />\r\n                                : <React.Fragment></React.Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHomePageContainer.propTypes = {\r\n    visibleChat: PropTypes.bool.isRequired,\r\n    visibleTodo: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        visibleChat: state.rootReducer.side.showChat,\r\n        visibleTodo: state.rootReducer.side.showTodo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    unSetUser: () => {\r\n        dispatch(logOut());\r\n    },\r\n    login: (val) => {\r\n        dispatch(logIn(val));\r\n    },\r\n    countMessages: (val) => {\r\n        dispatch(counterMessages(val))\r\n    }\r\n});\r\n\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(HomePageContainer);\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nclass LoginHeaderComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header-container\">\r\n                <div className=\"header-contant\">\r\n                    <p className=\"header-text\">Login Form</p>\r\n                    <i className=\"icon-close fas fa-times\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LoginHeaderComponent;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass LoginControlComponent extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-button\">\r\n                <button\r\n                    className=\"button button-submit\"\r\n                    onClick={this.props.signIn}\r\n                >\r\n                    Sign In\r\n                </button>\r\n                <button\r\n                    className=\"button button-reset\"\r\n                    onClick={this.props.reset}\r\n                >\r\n                    Reset Password?\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginControlComponent;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass LoginPasswordComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container-input\">\r\n                    <input\r\n                        placeholder=\"Password\"\r\n                        className=\"login-input\"\r\n                        type=\"password\"\r\n                    />\r\n                    <i\r\n                        className=\"icon-input fas fa-lock\"\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPasswordComponent;","import React from 'react';\r\nimport './style.css';\r\n\r\nclass LoginUserComponent extends React.Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container-input\">\r\n                    <input\r\n                        placeholder=\"Username\"\r\n                        className=\"login-input\"\r\n                        type=\"text\"\r\n                        onChange={this.props.handlerUserNameInput}\r\n                    />\r\n                    <i\r\n                        className=\"icon-input fas fa-user\"\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginUserComponent;","import React from 'react';\r\nimport './style.css';\r\nimport { connect } from 'react-redux';\r\nimport { logIn, logOut } from '../../store/actions/login/login.actions';\r\n\r\nimport LoginHeaderComponent from '../../components/login-header-component/loginHeaderComponent';\r\nimport LoginControlComponent from '../../components/login-control-component/loginControlComponent';\r\nimport LoginPasswordComponent from '../../components/login-password-component/loginPasswordComponent';\r\nimport LoginUserComponent from '../../components/login-user-component/loginUserComponent';\r\n\r\n\r\nexport class LoginContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: ''\r\n        };\r\n\r\n        this.signIn = this.signIn.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handlerUserNameInput = this.handlerUserNameInput.bind(this);\r\n    }\r\n\r\n    handlerUserNameInput(e) {\r\n        let userName = e.target.value;\r\n        this.setState({\r\n            name: userName\r\n        });\r\n    }\r\n\r\n    signIn() {\r\n        this.props.setUser(this.state.name);\r\n        localStorage.setItem('login', this.state.name);\r\n    }\r\n\r\n    reset = () => {\r\n        this.props.unSetUser();\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <form\r\n                    className=\"form-login\"\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <LoginHeaderComponent />\r\n                    <LoginUserComponent handlerUserNameInput={this.handlerUserNameInput} />\r\n                    <LoginPasswordComponent />\r\n                    <LoginControlComponent signIn={this.signIn} reset={this.reset} />\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setUser: (user) => {\r\n        dispatch(logIn(user));\r\n    },\r\n    unSetUser: () => {\r\n        dispatch(logOut());\r\n    }\r\n});\r\n\r\nexport const Login = connect(null, mapDispatchToProps)(LoginContainer);\r\n","import React from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { HomePage } from '../home-page-container/homePageContainer';\r\nimport { Login } from '../login-container/loginContainer';\r\n\r\nclass MainContainer extends React.Component {\r\n    render() {\r\n        let { logout } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    logout ? <Login /> : <HomePage />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nMainContainer.propTypes = {\r\n    logout: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let logout = state.user.logout;\r\n    return {\r\n        logout\r\n    };\r\n};\r\n\r\nexport const Main = connect(mapStateToProps)(MainContainer);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './adaptive.css';\r\nimport { Provider } from 'react-redux';\r\nimport { Store } from './store';\r\n\r\nimport { Main } from '../src/containers/main-container/Main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={Store}>\r\n        <Main />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './history';\r\n\r\nReactDOM.render((\r\n    <Router  history={history}>\r\n        <App />\r\n    </Router >), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}